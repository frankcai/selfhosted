---
- name: Run apt update
  ansible.builtin.apt:
    update_cache: yes
  become: yes

- name: Install required packages
  apt:
    name:
      - nginx
      - fail2ban
      - wireguard
      - docker.io
    state: present
  when: ansible_os_family == "Debian"
  become: yes

- name: Ensure the /etc/letsencrypt/live/{{ DNS_DOMAIN }} directory exists
  file:
    path: /etc/letsencrypt/live/{{ DNS_DOMAIN }} 
    state: directory
    mode: '0755'
    owner: root
    group: root
  become: yes

- name: Ensure the /etc/letsencrypt/archive/{{ DNS_DOMAIN }} directory exists
  file:
    path: /etc/letsencrypt/archive/{{ DNS_DOMAIN }} 
    state: directory
    mode: '0755'
    owner: root
    group: root
  become: yes

- name: Copy cert files to target
  copy:
    src: "/etc/letsencrypt/live/{{ DNS_DOMAIN }}/{{ item.src }}"
    dest: "/etc/letsencrypt/archive/{{ DNS_DOMAIN }}/{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: root
    group: root
  loop:
    - { src: 'cert.pem', dest: 'cert.pem', mode: '0644' }
    - { src: 'chain.pem', dest: 'chain.pem', mode: '0644' }
    - { src: 'fullchain.pem', dest: 'fullchain.pem', mode: '0644' }
    - { src: 'privkey.pem', dest: 'privkey.pem', mode: '0600' }
  become: yes

- name: Ensure symlinks for /etc/letsencrypt/live/{{ DNS_DOMAIN }} are set
  file:
    src: "/etc/letsencrypt/archive/{{ DNS_DOMAIN }}/{{ item.src }}"
    dest: "/etc/letsencrypt/live/{{ DNS_DOMAIN }}/{{ item.dest }}"
    state: link
    owner: root
    group: root
  loop:
    - { src: 'cert.pem', dest: 'cert.pem' }
    - { src: 'chain.pem', dest: 'chain.pem' }
    - { src: 'fullchain.pem', dest: 'fullchain.pem' }
    - { src: 'privkey.pem', dest: 'privkey.pem' }
  become: yes

- name: Deploy WireGuard Configuration
  ansible.builtin.template:
    src: wireguard.conf.j2
    dest: /etc/wireguard/wg0.conf
  notify:
    - Restart WireGuard      
  become: yes    

- name: Enable and Start WireGuard
  ansible.builtin.systemd:
    name: wg-quick@wg0
    state: started
    enabled: yes
    daemon_reload: yes  
  become: yes

- name: Enable IPv4 forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    state: present
    reload: yes     
  become: yes   

- name: Add user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes
  become: yes
  when: ansible_os_family == "Debian"

- name: Ensure Docker service is started and enabled
  service:
    name: docker
    state: started
    enabled: yes
  become: yes

- name: Set docker socket permissions
  file:
    path: /var/run/docker.sock
    group: docker
    mode: '0660'
  become: yes

- name: Ensure Uptime Kuma Docker container is running
  docker_container:
    name: upremote
    image: louislam/uptime-kuma:1
    ports:
      - "3001:3001"
    restart_policy: always
  notify: Restart Uptime Kuma Container

- name: Place Nginx config for services
  template:
    src: "{{ item }}.conf.j2"
    dest: "/etc/nginx/sites-available/{{ item }}.conf"
  loop:
    - redirect
    - upremote
  become: yes
  notify: Restart Nginx

- name: Symlink Nginx config to sites-enabled for services
  file:
    src: "/etc/nginx/sites-available/{{ item }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ item }}.conf"
    state: link
  loop:
    - redirect
    - upremote
  become: yes
  notify: Restart Nginx

- name: Ensure default site is not enabled
  file:
    path: "/etc/nginx/sites-enabled/default"
    state: absent
  become: yes
  notify: Restart Nginx 

- name: Ensure Nginx is running and enabled at boot
  service:
    name: nginx
    state: started
    enabled: yes
  become: yes

- name: Set up cron job for system package updates
  cron:
    name: "System Package Updates"
    hour: "4"
    minute: "0"
    job: "apt-get update && apt-get upgrade -y"
  become: yes